// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: post_like.sql

package db

import (
	"context"
)

const togglePostLike = `-- name: TogglePostLike :one
INSERT INTO post_likes (
    post_id,
    user_id
) VALUES (
    $1, $2
) ON CONFLICT(post_id,user_id) DO UPDATE SET
is_liked = NOT post_likes.is_liked
RETURNING is_liked
`

type TogglePostLikeParams struct {
	PostID int64 `json:"post_id"`
	UserID int64 `json:"user_id"`
}

func (q *Queries) TogglePostLike(ctx context.Context, arg TogglePostLikeParams) (bool, error) {
	row := q.db.QueryRowContext(ctx, togglePostLike, arg.PostID, arg.UserID)
	var is_liked bool
	err := row.Scan(&is_liked)
	return is_liked, err
}
