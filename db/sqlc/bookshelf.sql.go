// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: bookshelf.sql

package db

import (
	"context"
)

const toggleBook = `-- name: ToggleBook :one
INSERT INTO bookshelf (
    book_id,
    user_id
) VALUES (
    $1, $2
) ON CONFLICT(book_id, user_id) DO UPDATE SET
in_bookshelf = NOT bookshelf.in_bookshelf
RETURNING in_bookshelf
`

type ToggleBookParams struct {
	BookID string `json:"book_id"`
	UserID int64  `json:"user_id"`
}

func (q *Queries) ToggleBook(ctx context.Context, arg ToggleBookParams) (bool, error) {
	row := q.db.QueryRowContext(ctx, toggleBook, arg.BookID, arg.UserID)
	var in_bookshelf bool
	err := row.Scan(&in_bookshelf)
	return in_bookshelf, err
}
